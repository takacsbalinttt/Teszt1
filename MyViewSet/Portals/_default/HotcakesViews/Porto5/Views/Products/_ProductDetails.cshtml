@model Hotcakes.Modules.Core.Models.ProductPageViewModel
@using Hotcakes.Commerce.Catalog
@using Hotcakes.Modules.Core.Models

<div id="hcProductDetails" class="hc-product-details">
    <h3>@Localization.GetString("ProductDetails")</h3>

    @Html.Partial("_Rating", Model)

    <div class="hc-product-form dnnForm">
        @using (Html.BeginHccForm())
        {
            <div class="form-group row">
                <label class="col-sm-4 col-form-label">@Localization.GetString("SKU")</label>
                <div class="col-sm-8 mt-2">
                    <span id="hcSku">@Model.LocalProduct.Sku</span> 
                    <span id="hcStockDisplay" class="hc-stockdisplay">@Html.Raw(Model.StockMessage)</span>
                </div>
            </div>
            if (!Model.LocalProduct.IsBundle)
            {
                foreach (var opt in Model.LocalProduct.Options)
                {
                <div class="form-group row">
                    <label class="col-sm-4 col-form-label">@if (!opt.NameIsHidden) { @Html.Raw(opt.Name); } else { <text>&nbsp;</text> }</label>
                    <div class="col-sm-8 mt-2">
                        @if (opt.OptionType != OptionTypes.CheckBoxes && opt.OptionType != OptionTypes.RadioButtonList && opt.OptionType != OptionTypes.FileUpload)
                        {
                            @Html.Raw(opt.RenderWithSelection(Model.Selections.OptionSelectionList, string.Empty, "form-control"));
                        }
                        else
                        {
                            @Html.Raw(opt.RenderWithSelection(Model.Selections.OptionSelectionList, string.Empty, "margin-right-sm-important"));
                        }
                    </div>
                </div>
                }
            }
            else
            {
                foreach (var bundledItem in Model.BundledItems)
                {
                    if (bundledItem.Item.Options.Count > 0)
                    {
                        <h4>@bundledItem.Item.ProductName</h4>
                        foreach (var opt in bundledItem.Item.Options)
                        {
                        <div class="form-group row">
                            <label class="col-sm-4 col-form-label">@if (!opt.NameIsHidden) { @Html.Raw(opt.Name); } else { <text>&nbsp;</text> }</label>
                            <div class="col-sm-8 mt-2">
                                @if (opt.OptionType != OptionTypes.CheckBoxes && opt.OptionType != OptionTypes.RadioButtonList)
                                {
                                    @Html.Raw(opt.RenderWithSelection(Model.Selections.GetSelections(bundledItem.BundledProductAdv.Id), bundledItem.BundledProductAdv.Id.ToString(), "form-control"))
                                }
                                else
                                {
                                    @Html.Raw(opt.RenderWithSelection(Model.Selections.GetSelections(bundledItem.BundledProductAdv.Id), bundledItem.BundledProductAdv.Id.ToString(), "mr-2"))
                                }
                            </div>
                        </div>
                        }
                    }
                }
            }
            
            <div id="hcValidationMessage" style="display: none">
                @* Placeholder rebuilds by AJAX request! *@
                <div class="dnnFormMessage dnnFormWarning">@Html.Raw(Model.ValidationMessage)</div>
                @* END Placeholder rebuilds by AJAX request! *@
            </div>
                    
            if (Model.LocalProduct.IsUserSuppliedPrice)
            {
                <div class="form-group row hc-userprice">
                    <label class="col-sm-4 col-form-label">
                        @if (string.IsNullOrWhiteSpace(Model.LocalProduct.UserSuppliedPriceLabel))
                        {@Localization.GetString("UserPrice") }
                        else
                        { @Model.LocalProduct.UserSuppliedPriceLabel}
                    </label>
                    <div class="col-sm-8">@Html.TextBox("userprice", string.Empty, new { @class = "form-control col-sm-8" })</div>
                </div>
            }
            else if(Model.IsGiftCard)
            {
                <div class="form-group row">
                    <label class="col-4 col-form-label">
                        @Localization.GetString("GiftCardAmount")
                    </label>
                    <div class="col-8">
                        <select id="giftcardpredefined" class="form-control">
                            <option value="">@Localization.GetString("SetMyOwn")</option>
                            @foreach (var am in Model.GiftCardPredefinedAmounts)
                            {
                                <option value="@am">@am.ToString("c")</option>
                            }
                        </select>
                        @* Note: Unobtrusive validation disabled for "GiftCardAmount" because it doesnt support different cultures *@
                        @Html.TextBoxFor(m => m.GiftCardAmount, new { style = "width:40%;", @data_val = "false", @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.GiftCardAmount, Localization.GetString("ValMessage_GiftCardAmount"), new { @class = "alert alert-danger" })
                    </div>
                </div>
                <div class="form-group row">
                    <label class="col-4 col-form-label">
                        @Localization.GetString("GiftCardEmail")
                    </label>
                    <div class="col-8">
                        @Html.TextBoxFor(m => m.GiftCardRecEmail, string.Empty, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.GiftCardRecEmail, Localization.GetString("ValMessage_GiftCardEmailInvalid"), new { @class = "alert alert-daner" })
                    </div>
                </div>
                <div class="form-group row">
                    <label class="col-4 col-form-label">
                        @Localization.GetString("GiftCardName")
                    </label>
                    <div class="col-8">
                        @Html.TextBox("giftcardrecname", string.Empty, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group row">
                    <label class="col-4 col-form-label">
                        @Localization.GetString("GiftCardMessage")
                    </label>
                    <div class="col-8">
                        @Html.TextArea("giftcardmessage", string.Empty, new { @class = "form-control" })
                    </div>
                </div>
            }
            else 
            {
                <div id="hcPriceWrapper">
                    @* Placeholder rebuilds by AJAX request! *@
                    <div class="form-group row clear hc-listprice">
                        <label class="col-sm-4 control-label">@Localization.GetString("ListPrice")</label>
                        <span class="col-sm-8 margin-top-sm">
                            @if (Model.Prices.ListPrice != null)
                            {
                                @Html.Raw(Model.Prices.ListPrice.Text)
                            }
                        </span>
                    </div>
                    <div class="form-group row clear hc-siteprice">
                        <label class="col-sm-4 control-label">@Localization.GetString("SitePrice")</label>
                        <span class="col-sm-8 margin-top-sm">@Html.Raw(Model.Prices.SitePrice.Text)</span>
                    </div>
                    <div class="form-group row clear hc-yousave">
                        <label class="col-sm-4 control-label">@Localization.GetString("YouSave")</label>
                        <span class="col-sm-8 margin-top-sm">
                            @if (Model.Prices.YouSave != null)
                            {
                                @Html.Raw(Model.Prices.YouSave.Text)
                            }
                        </span>
                    </div>
                    @* END Placeholder rebuilds by AJAX request! *@
                </div>
            }
            
            if(!Model.LocalProduct.HideQty)
            {
                <div class="form-group row">
                    <label for="qty" class="col-sm-4 col-form-label">@Localization.GetString("Quantity")</label>
                    <div class="col-sm-8">
                        <input type="text" id="qty" name="qty" value="@Model.InitialQuantity" class="form-control small" />
                    </div>
                </div>
            }

            if (Model.IsAvailableForSale)
            {
                <div id="hcProductActions" class="form-group row">
                    <div class="col-sm-8 offset-4">
                        <ul class="list-unstyled list-inline">
                            <li class="list-inline-item">
                                <input type="submit" id="addtocartbutton" value="@Localization.GetString("AddToCart")" class="btn btn-primary" />
                            </li>
                            @if (Model.IsAvailableForWishList){
                                <li class="list-inline-item">
                                    <input id="savelaterbutton" name="savelaterbutton" type="submit" value="@Localization.GetString("AddToWishlist")" class="btn btn-secondary" />
                                </li>
                            }
                        </ul>
                    </div>
                </div>
            }
                
            @Html.Hidden("productbvin", @Model.LocalProduct.Bvin)

            if(ViewBag.UseFacebook || ViewBag.UsePinterest || ViewBag.UseTwitter) { 
                <div class="row-fluid">
                    <div class="col-xs-12">
                        @if (ViewBag.UseFaceBook)
                        {
                            @Html.Partial("_FaceBookSetup")
                            @Html.Partial("_FaceBookLike", new FaceBookLikeModel()
                            {
                                PageUrl = ViewBag.CurrentUrl
                            })
                        }

                        @if (ViewBag.UsePinterest)
                        {
                            @Html.Partial("_Pinterest", new PinterestViewModel()
                            {
                                Size = PinterestSize.Small,
                                Color = PinterestColor.Red,
                                Shape = PinterestShape.Rectangular,
                                Language = PinterestLanguage.English
                            })
                        }

                        @if (ViewBag.UseTwitter)
                        {
                            @Html.Partial("_Twitter", new TwitterViewModel()
                            {
                                DisplayUrl = ViewBag.CurrentUrl,
                                LinkUrl = ViewBag.CurrentUrl,
                                ViaTwitterName = ViewBag.TwitterHandle,
                                DefaultText = string.Format(ViewBag.TwitterDefaultTweetText, string.Concat(Model.LocalProduct.ProductName, " ", Model.LocalProduct.Sku))
                            })
                        }
                    </div>
                </div>
            }
        }
    </div>

    <h4>@Localization.GetString("Description")</h4>

    <div class="row">
        <div class="col-12">
            <div class="clearfix">
                @Html.Raw(Model.LocalProduct.LongDescription)
            </div>
        </div>
    </div>
</div>