@model Hotcakes.Modules.Core.Models.PagerViewModel
@helper IsCurrent(int page)
{
    if (Model.CurrentPage == page)
    {
        <text> class="active"</text>
    }
}           
@helper RenderPager() 
{     
    int pages = Model.PageRange == 0 ? Model.TotalPages : Math.Min(Model.TotalPages, Model.CurrentPage + Model.PageRange); 
    int pageStart = Model.PageRange == 0 ? 1 : Math.Max(1, Model.CurrentPage - 1);

<div class="row padding-bottom-lg text-center">
    <nav aria-label="@Localization.GetString("PageNavigation")">
        <ul class="pagination">
            @if (Model.CurrentPage > 1)
            {
                <li>
                    <a href="@String.Format(Model.PagerUrlFormat, Model.CurrentPage - 1)" aria-label="@Localization.GetString("Previous")">
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>
            }

            @for (int i = pageStart; i <= pages; i++)
            {
                <li @IsCurrent(i)>
                    @if (i == 1)
                    {
                        <a href="@String.Format(Model.PagerUrlFormatFirst, i)">@i</a>
                    }
                    else
                    {
                        <a href="@String.Format(Model.PagerUrlFormat, i)">@i</a>
                    }
                </li>
            }

            @if (Model.CurrentPage < pages)
            {
                <li>
                    <a href="@String.Format(Model.PagerUrlFormat, Model.CurrentPage + 1)" aria-label="@Localization.GetString("Next")">
                        <span aria-hidden="true">&raquo;</span>
                    </a>
                </li>
            }
        </ul>
    </nav>
</div>
}
@if (ViewData["sortByList"] != null)
{
    var sortList = (IEnumerable<SelectListItem>) ViewData["sortByList"];
    if (sortList.Count() > 1)
    {
    <div class="row padding-bottom-lg">
        <div class="col-xs-12 form-inline">
            <div class="form-group pull-right">
                <label class="margin-right-md">@Localization.GetString("SortBy")</label>
                @Html.DropDownList("sortOrderSelect", (IEnumerable<SelectListItem>)ViewData["sortByList"], new { onchange = "window.open(this.options[this.selectedIndex].value, '_top')", @class = "form-control" })
            </div>
        </div>
    </div>
    }
}
@if (Model.TotalPages > 1)
{
    @RenderPager()
}