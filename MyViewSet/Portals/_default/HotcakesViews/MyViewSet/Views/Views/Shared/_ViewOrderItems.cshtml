@model IEnumerable<Hotcakes.Commerce.Orders.LineItem>
<div class="col-xs-12">
	<div class="table-responsive">
		<table class="table table-border table-hover table-striped">
			<thead>
				<tr>
					<td>@Localization.GetString("Item")</td>
					<td>@Localization.GetString("Quantity")</td>
					<td class="hc-right">@Localization.GetString("Total")</td>
				</tr>
			</thead>
			@for (int i = 0; i < Model.Count(); i++)
			{
				var item = Model.ElementAt(i);
				<tr>
					<td>
						<label>@item.ProductName</label><br />
						<span>@item.ProductSku</span><br />
						@if (item.LineTotal != item.LineTotalWithoutDiscounts)
						{
							<div class="label-wrapper clear">
								<span class="label label-success">@Html.Raw(@item.DiscountDetailsAsHtml())</span>
							</div>
						}
						<div class="hidden-xs">
							@Html.Raw(item.ProductShortDescription)

							@if (!string.IsNullOrEmpty(item.CustomPropGiftCardNumber))
							{
								@Html.Raw(Localization.GetString("GiftCardNumber") + item.CustomPropGiftCardNumber)
							}
						</div>
					</td>
					<td>@item.Quantity</td>
					<td class="text-right">
						<span class="hcLineTotalAdjusted">
							@item.LineTotal.ToString("C")
						</span><br />
						<span class="hcLineTotalBase hc-strike"
						@if (!item.HasAnyDiscounts)
						{
							<text>style="display:none;"</text>
						}
						><mark>@item.LineTotalWithoutDiscounts.ToString("C")</mark></span>
					</td>
				</tr>
			}
		</table>
	</div>
</div>