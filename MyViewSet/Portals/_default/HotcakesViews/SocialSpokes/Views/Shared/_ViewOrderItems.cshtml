@model IEnumerable<Hotcakes.Commerce.Orders.LineItem>

<table class="dnnGrid">
	<tr class="dnnGridHeader">
		<td>@Localization.GetString("Item")</td>
		<td>@Localization.GetString("Quantity")</td>
		<td class="hc-right">@Localization.GetString("Total")</td>
	</tr>
	@for (int i = 0; i < Model.Count(); i++)
 {
	 var item = Model.ElementAt(i);
		<tr class="@(i % 2 == 1 ? "dnnGridAltItem" : "dnnGridItem")">
			<td>
				@item.ProductName<br />
				<span>@item.ProductSku</span><br />
				<div class="hidden-phone">
					@Html.Raw(item.ProductShortDescription)

                    @if (!string.IsNullOrEmpty(item.CustomPropGiftCardNumber))
                    {
                        @Html.Raw(Localization.GetString("GiftCardNumber") + item.CustomPropGiftCardNumber)
                    }
				</div>
				@if (item.LineTotal != item.LineTotalWithoutDiscounts)
				{
                    <br />
					@Html.Raw(@item.DiscountDetailsAsHtml())
				}
			</td>
			<td class="hc-center">@item.Quantity</td>
			<td class="hcLineTotal hc-right">
				<span class="hcLineTotalBase hc-strike"
			@if (!item.HasAnyDiscounts)
			{
				<text>style="display:none;"</text>
			}
			>@item.LineTotalWithoutDiscounts.ToString("C")</span><br />
				<span class="hcLineTotalAdjusted">
					@item.LineTotal.ToString("C")
				</span>
			</td>
		</tr>
 }
</table>
